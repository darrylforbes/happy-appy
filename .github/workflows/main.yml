name: Docker

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-18.04

    env:
      PATH: docker.pkg.github.com/${{ github.repository }}

    steps:
      - uses: actions/checkout@v2

      - name: Get SHA7
        id: vars
        run: echo "::set-output name=SHA7::$(git rev-parse --short HEAD)"

      - name: Build the docker images
        run: |
          docker network create nginx-network
          docker build --file api/Dockerfile \
          --tag $PATH/api:${{ steps.vars.outputs.SHA7 }} api
          docker build --file frontend/Dockerfile.prod \
          --tag $PATH/frontend:${{ steps.vars.outputs.SHA7 }} frontend
          docker build --file nginx/Dockerfile.prod \
          --tag $PATH/nginx:${{ steps.vars.outputs.SHA7 }} \
          --network nginx-network --network default nginx

      #   test:
      #     needs: build

      #     runs-on: ubuntu-18.04

      #     steps:
      #       - uses: actions/checkout@v2

      #       - name: Get SHA7
      #         id: vars
      #         run: echo "::set-output name=SHA7::$(git rev-parse --short HEAD)"

      - name: Run tests
        run: |
          docker run --env SECRET_KEY=${{ secrets.SECRET_KEY }} --env DEBUG=0 \
          --env DJANGO_ALLOWED_HOSTS=happyappy.darylforbes.me \
          --env POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
          --env POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
          --env POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
          --env POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
          $PATH/api:${{ steps.vars.outputs.SHA7 }} pytest

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          # IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          # IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          # VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          # [ "$VERSION" == "$default-branch" ] && VERSION=latest

          # echo IMAGE_ID=$IMAGE_ID
          # echo VERSION=$VERSION

          # docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $PATH/api:${{ steps.vars.outputs.SHA7 }}
          docker push $PATH/frontend:${{ steps.vars.outputs.SHA7 }}
          docker push $PATH/nginx:${{ steps.vars.outputs.SHA7 }}

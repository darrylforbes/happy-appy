name: CI/CD

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-18.04

    env:
      REGISTRY_PATH: ghcr.io/${{ github.repository }}

    steps:
      - uses: actions/checkout@v2

      - name: Get SHA7
        id: vars
        run: echo "::set-output name=SHA7::$(git rev-parse --short HEAD)"

      - name: Build docker images
        run: |
          docker network create nginx-network
          docker build --file api/Dockerfile \
          --tag $REGISTRY_PATH/happy-appy-api:${{ steps.vars.outputs.SHA7 }} api
          docker build --file frontend/Dockerfile.prod \
          --tag $REGISTRY_PATH/happy-appy-frontend:${{ steps.vars.outputs.SHA7 }} frontend
          docker build --file nginx/Dockerfile.prod \
          --tag $REGISTRY_PATH/happy-appy-nginx:${{ steps.vars.outputs.SHA7 }} \
          --network nginx-network --network default nginx

      - name: Log into registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push images
        run: |
          docker push $REGISTRY_PATH/happy-appy-api:${{ steps.vars.outputs.SHA7 }}
          docker push $REGISTRY_PATH/happy-appy-frontend:${{ steps.vars.outputs.SHA7 }}
          docker push $REGISTRY_PATH/happy-appy-nginx:${{ steps.vars.outputs.SHA7 }}

  test:
    needs: build

    runs-on: ubuntu-18.04

    env:
      REGISTRY_PATH: ghcr.io/${{ github.repository }}

    steps:
      - uses: actions/checkout@v2

      - name: Get SHA7
        id: vars
        run: echo "::set-output name=SHA7::$(git rev-parse --short HEAD)"

      - name: Log into registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull docker image
        run: docker pull $REGISTRY_PATH/happy-appy-api:${{ steps.vars.outputs.SHA7 }}

      - name: Run tests
        run: |
          docker run --env SECRET_KEY=${{ secrets.SECRET_KEY }} --env DEBUG=0 \
          --env DJANGO_ALLOWED_HOSTS=happyappy.darylforbes.me \
          --env POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
          --env POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
          --env POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
          --env POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
          $REGISTRY_PATH/happy-appy-api:${{ steps.vars.outputs.SHA7 }} pytest
  push:
    needs: test

    runs-on: ubuntu-18.04

    env:
      REGISTRY_PATH: ghcr.io/${{ github.repository }}

    steps:
      - uses: actions/checkout@v2

      - name: Get SHA7
        id: vars
        run: echo "::set-output name=SHA7::$(git rev-parse --short HEAD)"

      - name: Log into registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull docker images
        run: |
          docker pull $REGISTRY_PATH/happy-appy-api:${{ steps.vars.outputs.SHA7 }}
          docker pull $REGISTRY_PATH/happy-appy-frontend:${{ steps.vars.outputs.SHA7 }}
          docker pull $REGISTRY_PATH/happy-appy-nginx:${{ steps.vars.outputs.SHA7 }}

      - name: Tag images
        run: |
          docker tag $REGISTRY_PATH/happy-appy-api:${{ steps.vars.outputs.SHA7 }} \
          $REGISTRY_PATH/happy-appy-api:latest
          docker tag $REGISTRY_PATH/happy-appy-frontend:${{ steps.vars.outputs.SHA7 }} \
          $REGISTRY_PATH/happy-appy-frontend:latest
          docker tag $REGISTRY_PATH/happy-appy-nginx:${{ steps.vars.outputs.SHA7 }} \
          $REGISTRY_PATH/happy-appy-nginx:latest

      - name: Push images
        run: |
          docker push $REGISTRY_PATH/happy-appy-api:latest
          docker push $REGISTRY_PATH/happy-appy-frontend:latest
          docker push $REGISTRY_PATH/happy-appy-nginx:latest
